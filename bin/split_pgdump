#!/usr/bin/env ruby
# vim: set syntax=ruby shiftwidth=2 softtabstop=2 tabstop=8 expandtab
require 'optparse'
require 'split_pgdump'

class SplitPgDump::ComandLineWorker < SplitPgDump::Worker
  def parse_comand_line
    opts = OptionParser.new do |opts|
      opts.version = SplitPgDump::VERSION
      opts.banner = "\
#{opts.program_name} #{opts.version}
Usage: pg_dump my_base | split_pgdump [-r RULES_FILE] [-f DUMP_FILE] [-s SORT_BIN] [-d]

split_pgdump intend for producing stable set of small files instead of one
big dump file. Such set is suitable for being source for SCM systems, being
effectivly transmitted using rsync, repacking by 7z and other.

"

      opts.separator("Options:")

      opts.on("-r", "--rules=RULES_FILE", "File with rules on table splitting (default 'split.rules')") do |v|
        self.rules_file = v
      end
      opts.on("-f", "--file=FILE", "main file name (default 'dump.sql').",
              "Table content will be storred in FILE-tables directory") do |v|
        self.output_file = v
      end
      opts.on("-s", "--sort=SORT_BIN", "sort executable compatible with gnu coreutils sort (default `which sort`)") do |v|
        self.sorter = v
      end
      opts.on("-n", "--sorters=NUM", Integer, "number of sorters started in a shell") do |n|
        self.num_sorters = n.to_i
      end
      opts.on("--no-shell-fork", "could not use shell & for parrallel execution of sorters") do 
        self.could_fork = false
      end
      opts.on("-x", "--xargs=XARGS_BIN", "xargs executable (-L and -P options used) (default `which xargs`)") do |v|
        self.xargs = v
      end
      opts.on("--no-xargs", 'explicitly disable xargs') do
        self.xargs = ''
      end
      opts.on("-d", "--debug", "debug"){|v| $debug = true}
      opts.on_tail("-v", "--version", "show version") do
        puts opts.version
        exit
      end
      opts.on_tail("-h", "--help", "this message"){|v| puts opts; exit}

      opts.on_tail("\
Rules file format:
table_regexp  {split:<Split expr>} {sort:<Sort expr>}

<Split expr> examples:
  split:$field_name!
  split:$field_name!_$other_field!
  split:$client_id%00100!-$id%0025000!
  split:$some_field[2..-1]!/$other_field[10..30]%0005!

<Sort expr> is space separated list of fields, optionally with options for
gnu `sort` --key parameters (on my machine they are MbdfghinRrV):
  sort:client_id uid
  sort:client_id:n id:n

Example for redmines wiki_content_versions:

wiki_content_versions split:$page_id%0025!/$id%0000250! sort:page_id:n id:n
    ")

    end.parse!
  end
end

worker = SplitPgDump::ComandLineWorker.new
worker.parse_comand_line
worker.parse_rules
worker.clear_files
worker.work(STDIN)
